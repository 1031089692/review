今日内容:
    锁：
        1、Lock：同步锁。一次允许一个线程通过加锁的区间。--无法嵌套，会死锁。
        2、RLock：递归锁,与同步锁用法一致。可以嵌套
        3、BoundedSemaphore(N): 一次允许n个线程通过加锁的区间。N是写死的
        4、condition:一次运行x个线程通过加锁的区间，x是可以动态的
            #如先指定3，后面再指定5。那么只会增加2。
        5、Event:卡住所有，一个都不让过。然后一次全部释放。
            如需释放后再次全部锁住，需要lock.clear()

    总结:
        线程安全，列表和字典线程安全
        为什么要加锁?
            - 非线程安全
            - 控制一段代码


    threading.local:内部会为当前线程创建一个空间用于存储：phone=自己的值

    线程池:

    生产者和消费者模型
    生产者：
        队列，先进先出
            扩展。栈：后进先出。